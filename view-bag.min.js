// ==========================================================================
// Project:   Stik View Bag - Data template manipulation for Stik.js
// Copyright: Copyright 2013-2014 Lukas Alexandre
// License:   Licensed under MIT license
//            See https://github.com/stikjs/stik-view-bag/blob/master/LICENSE
// ==========================================================================

// Version: 0.1.0 | From: 21-04-2014

window.stik.boundary({as:"$viewBag",resolvable:!0,to:function($template){function extractValueOf(element){return isInput(element)?element.value:element.textContent}function updateElementValue(element,value){isInput(element)?element.value=value:element.textContent=value}function fieldsToBind(){return $template.getAttribute(bindingKey)?[$template]:$template.querySelectorAll("["+bindingKey+"]")}function isInput(element){return"INPUT"===element.nodeName.toUpperCase()||"TEXTAREA"===element.nodeName.toUpperCase()}if(!$template)throw"Stik: ViewBag needs a template to be attached to";var obj={},bindingKey="data-key";return obj.push=function(dataSet){for(var dataToBind,fields=fieldsToBind(),i=fields.length;i--;)dataToBind=fields[i].getAttribute(bindingKey),void 0!==dataSet[dataToBind]&&updateElementValue(fields[i],dataSet[dataToBind])},obj.pull=function(){for(var key,fields=fieldsToBind($template),dataSet={},i=fields.length;i--;)key=fields[i].getAttribute(bindingKey),dataSet[key]=extractValueOf(fields[i]);return dataSet},obj}});